commit bdd51a4f28b3e8f30751ffa7f2f984d837ba1e2c
Author: Alex Rosengarten <alxr@google.com>
Date:   Tue May 28 11:32:02 2019 -0700

    Added MobileNet Service (#3052)
    
    * coverted ml5 file to ts. Added `Mapper` function
    
    * experiment with aspect oriented programming
    - todo: test
    
    * refactored aop... tests still not passing
    
    * rm apo experiments
    
    * fixed import
    
    * - `Consumer` and `Producer` demand that a value of a type is taken/returned (respctively) and nothing else. This is the "at most" case.
    - `Consumes` and `Produces` demand that a value of a type is taken/returned (respectively) and *anything* else. This is the "at least" case.
    
    * gone too deep into tangents...
    
    * cleaning up tsjs core service
    
    * created, applied simple reference mgr class
    
    * resource mgmr: efficient via caching
    - Went down a tangent about how javascript doesn't have a hash function
    - found a simpler, cleaner way to cache.
    
    * impl mumur3 hash
    
    * Revert "impl mumur3 hash"
    
    This reverts commit 9c56e67d
    
    * Introducing MobileNet service
    
    * adding log statements
    
    * fits --> epochs
    
    * fits --> epochs
    
    * clean up comments
    
    * rm extra hot types
    
    * added back one of the types... (mapper)
    
    * cleaned up import
    
    * fixing lint errors
    
    * moved to services dir
    
    * exposing src/services to particles
    
    * fix bug w/ resource mgr + dispose. Got working overall
    
    * including ml5 lib
    
    * Added dispose functionality to mobilenet service
    
    * adapted ml5 example for tfjs mobilenet
    - currently not working due to service.
    
    * got working + reorganized
    - reusing `loadImage`
    - got mobile net demo working
    
    * v1 --> v2
    
    * removed unused HOTypes
    
    * rm `'use-strict'`
    
    * ignoring dynamic import ts error
    
    * adding types, documentation
    
    * added types, document for resource mgr
    
    * cleaner jsdocs
    
    * one more: fits --> epochs
    
    * broke up shell services deps
    
    * rm dynamic-import
    
    * WIP platform specific dynamic script impl
    
    * fixed eslint error
    
    * hiding import to window
    
    * attempt at node version of dynamic script
    
    * Creating platform-respecting image loading system.
    
    * MobileNet v2 --> v1
    
    * resource-mgr: kiss
    
    * - changed rollup typescript and webpack
    
    * iter 0/ attempt to get appveyor build working
    
    * iter 1/ getting appveyor working
    - https://github.com/Automattic/node-canvas/issues/1351#issuecomment-453869992
    
    * - specify any patch version, not minor version. (third number free, second number fixed).
    
    * iter 3/ getting appveyor build to work.
    - reference: https://github.com/Automattic/node-canvas/wiki/Installation---Windows/21397943f46610e9f06c057b1c643a4b1f82aea8
    
    * - trying to make sure that C\GTK\** has all the necessary libs
    
    * iter 5/ appveyor build
    - POE: removing a choco dep that is breaking build
    
    * iter 6/ appveyor build
    - declared two lines as power shell commands
    
    * iter 6/ appveyor build
    - declared two lines as power shell commands
    
    * iter 7/ appveyor attempt to use 7z correctly
    
    * iter 8/ appveyor build. 7z always yes
    
    * iter 9/ appveyor attempt to unzip to correct location
    
    * iter 10/ new strategy: extract all dlls to desired location
    
    * iter 11/ apveyor copying from node-canvas project
    
    * giving up. Will create GH issue
    #3077
